# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - iot-client

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Fetch Secrets from Key vault
        uses: Azure/get-keyvault-secrets@v1
        with: 
          keyvault: "iot-secrets"
          secrets: 'REACT-APP-IOT-WEB-API-SCOPE, REACT-APP-IOT-WEB-API,REACT-APP-CLIENT-ID,REACT-APP-TENANT,REACT-APP-USER-FLOW-RESET,REACT-APP-USER-FLOW-EDIT,REACT-APP-USER-FLOW-SIGN,REACT-APP-HUB-NAME,REACT-APP-SIGNALR-URL,REACT-APP-API-IOT-MSG-URL,REACT-APP-API-URL'
        id: secretsAction
      
      - name: Create .env file for build
        run: |
          echo "REACT_APP_API_URL=${{ steps.secretsAction.outputs.REACT-APP-IOT-WEB-API-SCOPE }}" > .env.production1
          echo "REACT_APP_API_IOT_MSG_URL=${{ steps.secretsAction.outputs.REACT-APP-API-IOT-MSG-URL }}" >> .env.production1
          echo "REACT_APP_SIGNALR_URL=${{ steps.secretsAction.outputs.REACT-APP-SIGNALR-URL }}" >> .env.production1
          echo "REACT_APP_HUB_NAME=${{ steps.secretsAction.outputs.REACT-APP-HUB-NAME }}" >> .env.production1
          echo "REACT_APP_USER_FLOW_SIGN=${{ steps.secretsAction.outputs.REACT-APP-USER-FLOW-SIGN }}" >> .env.production1
          echo "REACT_APP_USER_FLOW_EDIT=${{ steps.secretsAction.outputs.REACT-APP-USER-FLOW-EDIT }}" >> .env.production1
          echo "REACT_APP_USER_FLOW_RESET=${{ steps.secretsAction.outputs.REACT-APP-USER-FLOW-RESET }}" >> .env.production1
          echo "REACT_APP_TENANT=${{ steps.secretsAction.outputs.REACT-APP-TENANT }}" >> .env.production1
          echo "REACT_APP_CLIENT_ID=${{ steps.secretsAction.outputs.REACT-APP-CLIENT-ID }}" >> .env.production1
          echo "REACT_APP_IOT_WEB_API=${{ steps.secretsAction.outputs.REACT-APP-IOT-WEB-API }}" >> .env.production1
          echo "REACT_APP_IOT_WEB_API_SCOPE=${{ steps.secretsAction.outputs.REACT-APP-IOT-WEB-API-SCOPE }}" >> .env.production1
          ls
          cat .env.production1

      - name: npm install, build, and test
        run: |
          npm install
          npm run build -if-present
        env:
          CI: false
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: ./build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'iot-client'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_D11F8A6468094C918C0BE3FF0B06F91B }}
          package: .
